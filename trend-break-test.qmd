---
title: "trend-break-test"
format: html
editor: visual
---

## Loading in the packages

```{r}
library(dplyr)
library(tidyverse)
library(here)
library(readr)
library(gt)
library(tufte)
library(feasts)
library(janitor)
library(lubridate)
library(broom)
library(tsibble)
library(strucchange)
library(devtools)
library(changepoint)
library(xts)
library(tseries)
```

Clearing the R Project

```{r}

rm(list=ls())  # remove variables
graphics.off() # close figures

```

Loading in the data - energy

```{r}

# setting my root directory
rootdir <- ("/Users/colleenmccamy/Documents/MEDS/EDS_222_Stats/final_project")

# reading in the data
eia_data_raw <- read_csv(paste0(rootdir, "/data/eia_data.csv"))

# cleaning the data to be the two variables of interest
eia_df <- eia_data_raw |> 
  select(date, hourly_energy_mwh) |> 
  na.omit()
  
# creating a time series dataframe
eia_ts <- eia_df |> 
  as_tsibble()

# exploring the data with a plot
ggplot(data = eia_df,
       aes(x = date, 
           y = hourly_energy_mwh)) +
  geom_line(col = "#b52b8c") +
  labs(title = "Hourly Energy Demand (MWh)",
       x = "Date",
       y = "MWh") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

```

Loading in the data - temp

```{r}

# loading in the temperature data
temp_data <- read_csv(paste0(rootdir, "/data/sd_temp_data.csv"))

# wrangling the data
temp_data <- temp_data |> 
  mutate(temp_max = as.numeric(temp_max)) |> 
  mutate(temp_min = as.numeric(temp_min)) |> 
  mutate(temp_avg = as.numeric(temp_avg)) |> 
  mutate(temp_dept = as.numeric(temp_dept)) |> 
  mutate(date = lubridate::mdy(Date)) |> 
  select(!Date)

ggplot(temp_data, aes(x = date, y = temp_max)) + 
  geom_line(col = "#52796f") +
  labs(title = "Maximum Temperature per day (F)",
       x = "Date",
       y = "Max Temperature (F)") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))
```

Merging the data

```{r}

# restructuring the eia data to merge the dataset with the temperature data by date
eia_data <- eia_df |> 
  mutate(time = (date)) |> 
  mutate(date = as.Date(date))
eia_data$time <- format(eia_data$time, format = "%H:%M:%S")

# merging the data into one dataframe
energy_temp_df <- left_join(x = eia_data,
                            y = temp_data,
                            by = "date")

```

```{r}
eia_ts2 <- xts(decom_df$monthly_energy_mwh, decom_df$date)

monthly_data <- decom_df$monthly_energy_mwh
time <- c(1:49)

monthly_energy_ts <- ts(data = decom_df, frequency = 12, start = c(2018, 7, 1))
monthly_energy_ts

monthly_energy_bp <- cpt.mean(eia_ts2, penalty = "BIC", method = "BinSeg", Q = 8)

class(eia_ts)

y = eia_df$hourly_energy_mwh

#### test 2
monthly_energy_bp <- breakpoints(monthly_data ~ time, breaks = 1)
monthly_energy_bp


cusm_test_monthly <- efp(monthly_data ~ breakfactor(monthly_energy_bp), type = "OLS-CUSUM")
plot(cusm_test_monthly)
```

Daily

```{r}

energy_data <- eia_data$hourly_energy_mwh

monthly_data <- decom_df$monthly_energy_mwh
time <- c(1:35435)

hourly_energy_ts <- ts(data = decom_df, frequency = 12, start = c(2018, 7, 1))
monthly_energy_ts

monthly_energy_bp <- cpt.mean(eia_ts2, penalty = "BIC", method = "BinSeg", Q = 8)

class(eia_ts)

y = eia_df$hourly_energy_mwh

#### test 2
monthly_energy_bp <- breakpoints(monthly_data ~ time, breaks = 1)
monthly_energy_bp


cusm_test_monthly <- efp(monthly_data ~ breakfactor(monthly_energy_bp), type = "OLS-CUSUM")
plot(cusm_test_monthly)
```

```{r}
# getting daily info together
decom_df <- tou_peak_hours_df |> 
  group_by(date) |> 
  summarize(daily_energy_mwh = sum(hourly_energy_mwh))

decom_df <- decom_df |> 
  group_by(date) |> 
  summarize(daily_energy_mwh = mean(daily_energy_mwh))

decom_df$date <- format(decom_df$date, format = "%Y-%m-%d")

# extracting daily energy and creating time variable
daily_energy <- decom_df$monthly_energy_mwh
time_daily <- c(1:1461)

# 
daily_energy_ts <- ts(data = daily_energy, frequency = 365, start = c(2018, 7, 1), end = c(2022, 7, 1))
daily_energy_ts

#### test 2
daily_energy_bp <- breakpoints(daily_energy_ts ~ time_daily, breaks = 4)
daily_energy_bp


cusm_test_monthly <- efp(daily_energy_ts ~ breakfactor(daily_energy_bp), type = "OLS-CUSUM")
plot(cusm_test_monthly)

```
